{"version":3,"sources":["logo.svg","context/AuthContext.js","hooks/http.hook.js","pages/AuthPage/index.js","pages/ChatsPage/index.js","pages/ChatPage/index.js","hooks/auth.hook.js","components/NavComponent/index.js","App.js","routes.js","reportWebVitals.js","index.js"],"names":["noop","AuthContext","createContext","token","login","logout","isAuth","request","url","a","object","_url","fetch","AuthPage","useContext","useState","username","setUsername","password","setPassword","error","setError","authClickHandler","event","method","body","JSON","stringify","Username","Password","headers","req","json","res","ok","acces_token","to","className","style","color","type","name","onChange","target","value","onClick","ChatsPage","load","setLoad","data","setData","useEffect","map","chat","telegramid","firstname","lastname","id","ChatPage","message","setMessage","idx","useParams","populateMessages","mymessClickHandler","Number","mess","telegramuserid","text","storageName","NavComponent","App","routes","path","component","useRoutes","setToken","useCallback","jwtToken","localStorage","setItem","removeItem","parse","getItem","useAuth","Provider","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","root","document","getElementById","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.1824e8f3.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import {createContext} from 'react';\r\n\r\nfunction noop() {}\r\n\r\nexport const AuthContext = createContext({\r\n  token: null,\r\n  login: noop,\r\n  logout: noop,\r\n  isAuth: false\r\n});","import React from 'react';\r\n\r\nexport const request = async (url, object = {}) => {\r\n    let _url = `http://botclientapi.dobbikov.ga${url}`;\r\n    const request = await fetch(_url, object);\r\n    return request;\r\n}","import React, { useState, useContext } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { AuthContext } from '../../context/AuthContext';\r\nimport { request } from '../../hooks/http.hook';\r\nimport './style.css';\r\n\r\nexport const AuthPage = () => {\r\n    const { isAuth, login } = useContext(AuthContext);\r\n    const [username, setUsername] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [error, setError] = useState(\"\");\r\n\r\n    const loginUpdateHandler = event => {\r\n        setUsername(event.target.value);\r\n    }\r\n    const passwordUpdateHandler = event => {\r\n        setPassword(event.target.value);\r\n    }\r\n    const authClickHandler = async event => {\r\n        const req = await request('/api/Users/Auth', {method: 'POST', body: JSON.stringify({Username: username, Password: password}), headers: {\"Accept\": \"application/json\", \"Content-Type\" : \"application/json\"}});\r\n        const res = await req.json();\r\n        if(req.ok === true){\r\n            login(res.acces_token);\r\n        }\r\n        else\r\n            setError(\"Неверный логин или пароль.\");\r\n    }\r\n    if(isAuth === true)\r\n        return ( <Redirect to=\"/chats\"/> )\r\n\r\n    return (\r\n        <div className=\"pages\">\r\n            <div className=\"auth-window\">\r\n                <p style={{color: 'red'}}>{error}</p>\r\n                <p>Введите логин:</p>\r\n                <input type=\"text\" name=\"login\" onChange={loginUpdateHandler} value={username}/>\r\n                <p>Введите пароль:</p>\r\n                <input type=\"password\" name=\"password\" onChange={passwordUpdateHandler} value={password}/>\r\n                <button onClick={authClickHandler}>Authorize</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { request } from '../../hooks/http.hook';\r\nimport './style.css';\r\n\r\nexport const ChatsPage = () => {\r\n    const [load, setLoad] = useState(false);\r\n    const [data, setData] = useState([]);\r\n\r\n    useEffect(async () => {\r\n        const req = await request('/api/Chats', {method: 'GET', headers: {'Content-Types': 'application/json'}});\r\n        const res = await req.json();\r\n        if(req.ok === true)\r\n        {\r\n            setLoad(true);\r\n            setData(res);\r\n        }\r\n    }, [])\r\n\r\n    if(load == false)\r\n        return( <h1 className=\"loading\">Loading...</h1> )\r\n    return(\r\n        <div className=\"pages\">\r\n            <div className=\"container\">\r\n                {data.map(chat => \r\n                    <Link to={`/chat/${chat.telegramid}`} key={chat.id} className=\"chat\">\r\n                        <p>{chat.telegramid < 0 ? chat.username : \"\"} {chat.firstname} {chat.lastname}</p>\r\n                    </Link>   \r\n                )}\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { request } from '../../hooks/http.hook';\r\nimport './style.css';\r\n\r\nexport const ChatPage = () => {\r\n    const [load, setLoad] = useState(false);\r\n    const [data, setData] = useState([]);\r\n    const [message, setMessage] = useState(\"\");\r\n    const idx = useParams().id;\r\n\r\n    const populateMessages = async () => {\r\n        const req = await request(`/api/Messages/ByChatId/${idx}`, {method: 'GET', headers: {'Content-Type': 'application/json'}});\r\n        const res = await req.json();\r\n        if(req.ok === true){\r\n            setLoad(true);\r\n            setData(res);\r\n        }\r\n    }\r\n\r\n    const messageChangeHandler = event => {\r\n        setMessage(event.target.value);\r\n    }\r\n    const mymessClickHandler = async event => {\r\n        const req = await request('/api/Messages', {method: 'POST', body: JSON.stringify({\"Telegramchatid\": Number(idx), \"Text\": message, \"Telegramuserid\": 1495033650}), headers: {'Content-Type': 'application/json'}});\r\n        const res = await req.json();\r\n        if(req.ok === true)\r\n            await populateMessages();\r\n        setMessage(\"\");\r\n    }\r\n\r\n    useEffect(async () => {\r\n        await populateMessages();\r\n    }, []);\r\n    if(load === false)\r\n        return( <h1>Loading...</h1>)\r\n    \r\n    return (\r\n        <div className=\"pages\">\r\n            <div className=\"container\">\r\n                <div className=\"messages\">\r\n                    {data.map(mess =>\r\n                        <div className={mess.telegramuserid === 1495033650 ? \"you mess\" : \"not-you mess\"} key={mess.id}>\r\n                            <p className=\"names\">{mess.firstname} {mess.lastname}</p>\r\n                            <p>{mess.text}</p>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n                <div className=\"inputs\">\r\n                    <input type=\"text\" onChange={messageChangeHandler} value={message} className=\"inputs-mess\"/><input type=\"submit\" value=\"Отправить\" className=\"inputs-submit\" onClick={mymessClickHandler}/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useCallback, useEffect } from 'react';\r\n\r\nconst storageName = 'userData';\r\n\r\n\r\nexport const useAuth = () => {\r\n    const [token, setToken] = useState(null);\r\n\r\n    const login = useCallback((jwtToken) => {\r\n        setToken(jwtToken);\r\n\r\n        localStorage.setItem(storageName, JSON.stringify({token: jwtToken}));\r\n    }, [])\r\n    const logout = useCallback(() => {\r\n        setToken(null);\r\n        localStorage.removeItem(storageName);\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        const data = JSON.parse(localStorage.getItem(storageName));\r\n\r\n        if(data && data.token){\r\n            login(data.token);\r\n        }\r\n    }, [login]);\r\n\r\n    return {login, logout, token};\r\n}","import React, { useContext } from 'react';\r\nimport { AuthContext } from '../../context/AuthContext';\r\nimport { Link } from 'react-router-dom';\r\nimport './style.css';\r\n\r\nexport const NavComponent = () => {\r\n    const { isAuth, logout } = useContext(AuthContext);\r\n    if(isAuth === false)\r\n        return null;\r\n    else{\r\n        return (\r\n            <header>\r\n                <Link to=\"/chats\" className=\"link\">Чаты</Link>\r\n                <Link onClick={logout}>Выйти</Link>\r\n            </header>\r\n        )\r\n    }\r\n}","import logo from './logo.svg';\nimport './App.css';\nimport { useRoutes } from './routes';\nimport { useAuth } from './hooks/auth.hook';\n\nimport { AuthContext } from './context/AuthContext';\n\nimport { NavComponent } from './components/NavComponent/index';\n\nfunction App() {\n  const routes = useRoutes();\n  const {token, login, logout} = useAuth();\n  const isAuth = !!token;\n  return (\n    <AuthContext.Provider value={{\n      login, logout, token, isAuth\n    }} >\n      <div className=\"App\">\n        <NavComponent/>\n        {routes}\n      </div>\n    </AuthContext.Provider>\n  );\n}\n\nexport default App;\n","import React, { useContext } from 'react';\r\nimport { Redirect, Route } from 'react-router-dom';\r\nimport { AuthContext } from './context/AuthContext';\r\n\r\nimport { AuthPage } from './pages/AuthPage/index';\r\nimport { ChatsPage } from './pages/ChatsPage/index';\r\nimport { ChatPage } from './pages/ChatPage/index';\r\n\r\nexport const useRoutes = () => {\r\n    const { isAuth } = useContext(AuthContext);\r\n    return(\r\n        <>\r\n            { isAuth == false ? <Redirect to=\"/auth\"/> : <Redirect to=\"/chats\"/> }\r\n            <Route path=\"/auth\" component={AuthPage}/>\r\n            <Route path=\"/chats\" component={ChatsPage}/>\r\n            <Route path=\"/chat/:id\" component={ChatPage}/>\r\n        </>\r\n    )\r\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\n\nvar root = document.getElementById('root');\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  root\n);\n\nreportWebVitals();\n"],"sourceRoot":""}